<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.alien.mybatis.samples.mapper.BlogMapper">
    <resultMap id="oneToOneBlog" type="blog">
        <!--<constructor>
            <idArg column="id" javaType="int"/>
        </constructor>-->
        <id property="id" column="blog_id"/>
        <result property="title" column="title"/>

        <association property="author" resultMap="org.alien.mybatis.samples.mapper.AuthorMapper.author"/>

        <!--<association property="author" javaType="author">
            <id property="id" column="author_id"/>
            <result property="username" column="username"/>
            <result property="password" column="password"/>
            <result property="email" column="email"/>
            <result property="bio" column="bio"/>
            <result property="favouriteSection" column="favouriteSection"/>
        </association>-->
        <collection property="posts" resultMap="org.alien.mybatis.samples.mapper.PostMapper.post"/>
    </resultMap>

    <select id="getBlogOneToOne" resultMap="oneToOneBlog">
        SELECT
            t1.id                blog_id,
            t1.title,
            t2.id                author_id,
            t2.username,
            t2.password,
            t2.email,
            t2.bio,
            t2.favourite_section favouriteSection
        FROM blog t1, author t2
        WHERE t1.author_id = t2.id
    </select>

    <select id="getAllBlog" resultType="blog">
        SELECT
            B.id                AS blog_id,
            B.title             AS blog_title,
            B.author_id         AS blog_author_id,
            A.id                AS author_id,
            A.username          AS author_username,
            A.password          AS author_password,
            A.email             AS author_email,
            A.bio               AS author_bio,
            A.favourite_section AS author_favourite_section,
            P.id                AS post_id,
            P.blog_id           AS post_blog_id,
            P.author_id         AS post_author_id,
            P.created_on        AS post_created_on,
            P.section           AS post_section,
            P.subject           AS post_subject,
            P.draft             AS draft,
            P.body              AS post_body,
            C.id                AS comment_id,
            C.post_id           AS comment_post_id,
            C.name              AS comment_name,
            C.comment_text      AS comment_text,
            T.id                AS tag_id,
            T.name              AS tag_name
        FROM Blog B
            LEFT OUTER JOIN Author A ON B.author_id = A.id
            LEFT OUTER JOIN Post P ON B.id = P.blog_id
            LEFT OUTER JOIN Post_Comment C ON P.id = C.post_id
            LEFT OUTER JOIN Post_Tag PT ON PT.post_id = P.id
            LEFT OUTER JOIN Tag T ON PT.tag_id = T.id
        WHERE B.id = 1

    </select>
</mapper>