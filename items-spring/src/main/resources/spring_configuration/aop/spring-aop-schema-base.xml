<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="userAdvisor" class="org.springframework.samples.aop.schema.aop.TransactionAspect"/>

    <bean id="userDao" class="org.springframework.samples.aop.schema.dao.UserDaoImpl"/>

    <bean id="userService" class="org.springframework.samples.aop.schema.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="userAction" class="org.springframework.samples.aop.schema.action.UserAction">
        <property name="userService" ref="userService"/>
    </bean>

    <aop:config>

        <!-- Pointcut service package's methods -->
        <aop:pointcut id="servicePointcut" expression="execution(*
        org.springframework.samples.aop.schema.service.*.*(..))"/>

        <!-- Detail method without parameters-->
        <aop:pointcut id="detailMethodWithoutParameters" expression="
                                            execution(* org.springframework.samples.aop.schema.service.UserService
                                            .addUser(org.springframework.samples.aop.dto.User))"/>
        <!-- Detail method with primary parameters-->
        <aop:pointcut id="detailMethodWithPrimaryParameters" expression="
                                            execution(* org.springframework.samples.aop.schema.service.UserService
                                            .getUser(int)) and args(userId)"/>

        <!-- Detail method with primary parameters-->
        <aop:pointcut id="detailMethodWithReferenceParameters" expression="
                                            execution(* org.springframework.samples.aop.schema.service.UserService
                                            .addUser(org.springframework.samples.aop.dto.User))
                                            and args(user)"/>



        <!-- All public methods -->
        <aop:pointcut id="allPublicMethodsPointcut" expression="execution(public * *(..))"/>

        <!-- All method in specified classes -->
        <aop:pointcut id="allMethodInSpecifiedClasses" expression="
        execution(* org.springframework.samples.aop.schema.service.UserService.*(..))"/>

        <!-- all service package's methods -->
        <aop:pointcut id="p1" expression="execution(* org.springframework.samples.aop.schema.service.*.*(..)))"/>

        <!--Declare an aspect -->
        <aop:aspect id="userAspectAOP" ref="userAdvisor">
            <!--AOP advice without parameters
            <aop:before method="before" pointcut-ref="p1"/>
            <aop:after method="after" pointcut-ref="p1"/>
            <aop:after-returning method="afterReturning" pointcut-ref="p1"/>
            <aop:after-throwing method="afterThrowing" throwing="proceedFailException" pointcut-ref="p1"/>
            <aop:around method="around" pointcut-ref="p1"/>
            <aop:around method="around" pointcut-ref="detailMethod"/>
            -->

            <!-- AOP advice with primary parameters -->
            <aop:around method="aroundWithPrimaryParameter" pointcut-ref="detailMethodWithPrimaryParameters"/>

            <!-- AOP advice with reference parameters -->
            <aop:around method="aroundWithReferenceParameter" pointcut-ref="detailMethodWithReferenceParameters"/>

            <!-- AOP Introductions -->
            <aop:declare-parents
                    types-matching="org.springframework.samples.aop.schema.action.*+"
                    implement-interface="org.springframework.samples.aop.schema.introduction.FilterService"
                    default-impl="org.springframework.samples.aop.schema.introduction.FilterServiceImpl"/>

            <!-- validate : As a consequence, any given pointcut will be matched against public methods only! -->
            <aop:before method="before"
                        pointcut="execution(* org.springframework.samples.aop.schema.action.*.*(..))"/>
        </aop:aspect>

    </aop:config>

</beans>